(function(a){a.module("oc.lazyLoad").config(["$provide",function(b){b.decorator("$ocLazyLoad",["$delegate","$q",function(d,c){d.filesLoader=function e(g){var i=arguments.length<=1||arguments[1]===undefined?{}:arguments[1];var m=[],s=[],k=[],l=[],j=null,q=d._getFilesCache();d.toggleWatch(true);a.extend(i,g);var f=function f(v){var u=null,t;if(a.isObject(v)){u=v.type;v=v.path}j=q.get(v);if(a.isUndefined(j)||i.cache===false){if((t=/^(css|less|html|htm|js)?(?=!)/.exec(v))!==null){u=t[1];v=v.substr(t[1].length+1,v.length)}if(!u){if((t=/[.](css|less|html|htm|js)?((\?|#).*)?$/.exec(v))!==null){u=t[1]}else{if(!d.jsLoader.hasOwnProperty("ocLazyLoadLoader")&&d.jsLoader.hasOwnProperty("requirejs")){u="js"}else{d._$log.error("File type could not be determined. "+v);return}}}if((u==="css"||u==="less")&&m.indexOf(v)===-1){m.push(v)}else{if((u==="html"||u==="htm")&&s.indexOf(v)===-1){s.push(v)}else{if(u==="js"||k.indexOf(v)===-1){k.push(v)}else{d._$log.error("File type is not valid. "+v)}}}}else{if(j){l.push(j)}}};if(i.serie){f(i.files.shift())}else{a.forEach(i.files,function(t){f(t)})}if(m.length>0){var o=c.defer();d.cssLoader(m,function(t){if(a.isDefined(t)&&d.cssLoader.hasOwnProperty("ocLazyLoadLoader")){d._$log.error(t);o.reject(t)}else{o.resolve()}},i);l.push(o.promise)}if(s.length>0){var n=c.defer();d.templatesLoader(s,function(t){if(a.isDefined(t)&&d.templatesLoader.hasOwnProperty("ocLazyLoadLoader")){d._$log.error(t);n.reject(t)}else{n.resolve()}},i);l.push(n.promise)}if(k.length>0){var p=c.defer();d.jsLoader(k,function(t){if(a.isDefined(t)&&(d.jsLoader.hasOwnProperty("ocLazyLoadLoader")||d.jsLoader.hasOwnProperty("requirejs"))){d._$log.error(t);p.reject(t)}else{p.resolve()}},i);l.push(p.promise)}if(l.length===0){var r=c.defer(),h="Error: no file to load has been found, if you're trying to load an existing module you should use the 'inject' method instead of 'load'.";d._$log.error(h);r.reject(h);return r.promise}else{if(i.serie&&i.files.length>0){return c.all(l).then(function(){return d.filesLoader(g,i)})}else{return c.all(l)["finally"](function(t){d.toggleWatch(false);return t})}}};d.load=function(l){var n=arguments.length<=1||arguments[1]===undefined?{}:arguments[1];var o=this,i=null,k=[],p=c.defer(),g;var h=a.copy(l);var j=a.copy(n);if(a.isArray(h)){a.forEach(h,function(q){k.push(o.load(q,j))});c.all(k).then(function(q){p.resolve(q)},function(q){p.reject(q)});return p.promise}if(a.isString(h)){i=o.getModuleConfig(h);if(!i){i={files:[h]}}}else{if(a.isObject(h)){if(a.isDefined(h.path)&&a.isDefined(h.type)){i={files:[h]}}else{i=o.setModuleConfig(h)}}}if(i===null){var f=o._getModuleName(h);g='Module "'+(f||"unknown")+'" is not configured, cannot load.';d._$log.error(g);p.reject(new Error(g));return p.promise}else{if(a.isDefined(i.template)){if(a.isUndefined(i.files)){i.files=[]}if(a.isString(i.template)){i.files.push(i.template)}else{if(a.isArray(i.template)){i.files.concat(i.template)}}}}var m=a.extend({},j,i);if(a.isUndefined(i.files)&&a.isDefined(i.name)&&d.moduleExists(i.name)){return d.inject(i.name,m,true)}d.filesLoader(i,m).then(function(){d.inject(null,m).then(function(q){p.resolve(q)},function(q){p.reject(q)})},function(q){p.reject(q)});return p.promise};return d}])}])})(angular);