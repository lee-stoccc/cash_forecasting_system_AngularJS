"use strict";SwaggerUi.Views.AuthView=Backbone.View.extend({events:{"click .auth_submit__button":"authorizeClick","click .auth_logout__button":"logoutClick"},tpls:{main:Handlebars.templates.auth_view},selectors:{innerEl:".auth_inner",authBtn:".auth_submit__button"},initialize:function(a){this.options=a||{};a.data=a.data||{};this.router=this.options.router;this.authsCollectionView=new SwaggerUi.Views.AuthsCollectionView({data:a.data});this.$el.html(this.tpls.main({isLogout:this.authsCollectionView.collection.isAuthorized(),isAuthorized:this.authsCollectionView.collection.isPartiallyAuthorized()}));this.$innerEl=this.$(this.selectors.innerEl);this.isLogout=this.authsCollectionView.collection.isPartiallyAuthorized()},render:function(){this.$innerEl.html(this.authsCollectionView.render().el);return this},authorizeClick:function(a){a.preventDefault();a.stopPropagation();if(this.authsCollectionView.collection.isValid()){this.authorize()}else{this.authsCollectionView.highlightInvalid()}},authorize:function(){this.authsCollectionView.collection.forEach(function(c){var d,a;var b=c.get("type");if(b==="apiKey"){d=new SwaggerClient.ApiKeyAuthorization(c.get("name"),c.get("value"),c.get("in"));this.router.api.clientAuthorizations.add(c.get("title"),d)}else{if(b==="basic"){a=new SwaggerClient.PasswordAuthorization(c.get("username"),c.get("password"));this.router.api.clientAuthorizations.add(c.get("title"),a)}else{if(b==="oauth2"){this.handleOauth2Login(c)}}}},this);this.router.load()},logoutClick:function(a){a.preventDefault();this.authsCollectionView.collection.forEach(function(b){window.swaggerUi.api.clientAuthorizations.remove(b.get("title"))});this.router.load()},handleOauth2Login:function(h){var m=window.location;var f=location.pathname.substring(0,location.pathname.lastIndexOf("/"));var c=m.protocol+"//"+m.host+f+"/o2c.html";var a=window.oAuthRedirectUrl||c;var e=null;var k=_.map(h.get("scopes"),function(o){return o.scope});var d,i,n;window.OAuthSchemeKey=h.get("title");window.enabledScopes=k;var b=h.get("flow");if(h.get("type")==="oauth2"&&b&&(b==="implicit"||b==="accessCode")){i=h.attributes;e=i.authorizationUrl+"?response_type="+(b==="implicit"?"token":"code");window.swaggerUi.tokenName=i.tokenName||"access_token";window.swaggerUi.tokenUrl=(b==="accessCode"?i.tokenUrl:null);d=window.OAuthSchemeKey}else{if(h.get("type")==="oauth2"&&b&&(b==="application")){i=h.attributes;window.swaggerUi.tokenName=i.tokenName||"access_token";this.clientCredentialsFlow(k,i.tokenUrl,window.OAuthSchemeKey);return}else{if(h.get("grantTypes")){var g=h.get("grantTypes");for(var l in g){if(g.hasOwnProperty(l)&&l==="implicit"){i=g[l];n=i.loginEndpoint.url;e=i.loginEndpoint.url+"?response_type=token";window.swaggerUi.tokenName=i.tokenName}else{if(g.hasOwnProperty(l)&&l==="accessCode"){i=g[l];n=i.tokenRequestEndpoint.url;e=i.tokenRequestEndpoint.url+"?response_type=code";window.swaggerUi.tokenName=i.tokenName}}}}}}redirect_uri=a;e+="&redirect_uri="+encodeURIComponent(a);e+="&realm="+encodeURIComponent(realm);e+="&client_id="+encodeURIComponent(clientId);e+="&scope="+encodeURIComponent(k.join(scopeSeparator));e+="&state="+encodeURIComponent(d);for(var j in additionalQueryStringParams){e+="&"+j+"="+encodeURIComponent(additionalQueryStringParams[j])}window.open(e)},clientCredentialsFlow:function(c,b,a){var d={client_id:clientId,client_secret:clientSecret,scope:c.join(" "),grant_type:"client_credentials"};$.ajax({url:b,type:"POST",data:d,success:function(e){onOAuthComplete(e,a)},error:function(){onOAuthComplete("")}})}});