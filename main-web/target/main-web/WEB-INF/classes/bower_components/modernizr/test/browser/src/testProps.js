describe("testProps",function(){var f={foo:7};var e={_q:[]};var d;var b;var a;var c;before(function(g){c=requirejs.config({context:Math.random().toString().slice(2),baseUrl:"../src",paths:{sinon:"../test/js/lib/sinon",cleanup:"../test/cleanup"}});define("ModernizrProto",[],function(){return f});define("Modernizr",function(){return e});define("package",[],function(){return{}});c(["cleanup","sinon"],function(h,i){b=h;a=i;g()})});describe("native detect",function(){var h=function(i,j){return !!j?true:undefined};var g;beforeEach(function(i){g=a.spy();h=a.spy(h);define("contains",function(){return g});define("nativeTestProps",a.spy(function(){return h}));c(["testProps"],function(j){d=j;i()})});it("returns the value from nativeTestProp if not undefined",function(){expect(d(["fake"],undefined,true));expect(h.callCount).to.be(1);expect(g.callCount).to.be(0)});it("does not return the value from nativeTestProp when undefined",function(){expect(d(["fake"],undefined,false));expect(h.callCount).to.be(1);expect(g.callCount).to.not.be(0)});afterEach(function(){c.undef("mStyle");c.undef("cssToDOM");c.undef("contains");c.undef("testProps");c.undef("nativeTestProps")})});describe("nonnative detect",function(){var i=function(l,k){return l.indexOf(k)>-1};var j=function(){return};var g;var h;beforeEach(function(k){j=a.spy(j);i=a.spy(i);g=a.spy();h={};define("nativeTestProps",a.spy(function(){return j}));define("cssToDOM",function(){return g});define("contains",function(){return i});define("mStyle",function(){return h});c(["testProps"],function(l){d=l;k()})});it("cleans up mStyle changes",function(){expect(d(["fake"],undefined,true));expect(i.callCount).to.be(1);expect(h.style).to.equal(undefined);expect(h.modElem).to.equal(undefined)});it("calls cssToDOM when props have a `-`",function(){expect(d(["fake-detect"],undefined,true));expect(g.called).to.be(true)});it("returns true for valid prop, and skipValueTest",function(){expect(d(["display"],undefined,true,true)).to.be(true)});it("returns true for valid prop, and good value",function(){expect(d(["display"],undefined,"block")).to.be(true)});it("returns false for valid prop and bad value",function(){expect(d(["display"],undefined,"penguin")).to.be(false)});it("returns the prop if a prefixed lookup",function(){expect(d(["display"],"pfx","block")).to.be("display")});it("returns the prop if a prefixed lookup with skipValueTest",function(){expect(d(["display"],"pfx","block",true)).to.be("display")});it("works properly",function(){expect(d(["margin"])).to.equal(true);expect(d(["happiness"])).to.equal(false);expect(d(["fontSize"])).to.equal(true)});afterEach(function(){c.undef("mStyle");c.undef("cssToDOM");c.undef("contains");c.undef("testProps");c.undef("ModernizrProto");c.undef("nativeTestProps")})});after(function(){b()})});